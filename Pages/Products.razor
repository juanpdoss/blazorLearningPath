@page "/productos"

<PageTitle>Productos</PageTitle>

<button class="btn btn-primary" @onclick="DeleteProducts">Limpiar productos</button>
<button class="btn btn-primary" @onclick="CreateProducts">Crear productos</button>
<button class="btn btn-primary" @onclick="LogProducts" >Loguear productos a la consola</button>

<div>
    @if (productos.Count > 0)
    {
        <ul>
            @foreach (Producto item in productos)
            {
                <li>@item.ToString()</li>
                <br>
            }
        </ul>
    }

</div>



@code {
    List<Producto> productos = new List<Producto>();

    enum ETipo
    {
        calzado,
        indumentaria,

        aro,

        collar,

        animeStuff,

        fandomStuff,

    }
    enum EMarca
    {
        lunaPLena = 0,
        sharon,

        kori,

        tidesShops,

        fairyStore,

        srtaKawaii,
    }

    class Producto
    {

        ETipo tipo;
        float precio;
        EMarca marca;

        public Producto(ETipo tipo, float precio, EMarca marca)
        {
            this.tipo = tipo;
            this.precio = precio;
            this.marca = marca;
        }



        public override string ToString()
        {
            return $"Tipo de producto: {this.tipo},\n" +
            $"Precio: {this.precio},\n" +
            $"De nuestra marca: {this.marca},\n";

        }

    }


    // Make a random instance of a product, and returns it
    Producto createRandomProduct()
    {
        Random randomPrice = new Random();
        return new Producto((ETipo)randomPrice.Next(1, 5), randomPrice.Next(150, 1200), (EMarca)(randomPrice.Next(1, 5)));
    }

    // create randoms products using method CreateRandomProduct()
    private void CreateProducts()
    {
        if (this.productos.Count == 0)
        {
            // adds ten products
            for (int i = 0; i < 10; i++)
            {
                this.productos.Add(this.createRandomProduct());
            }
        }

    }


    // show all products on the console
    void LogProducts()
    {
        if (this.productos.Count == 0)
        {
            return;
        }

        foreach (Producto item in this.productos)
        {
            Console.WriteLine(item.ToString());
        }
    }

    // re-create the products, and then calls the Garbage Collector
    private void DeleteProducts()
    {
        this.productos.Clear();
    }
}
